{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","actions/productActions.js","components/Message.js","components/Loader.js","components/Paginate.js","components/Meta.js","components/ProductCarousel.js","pages/HomePage.js","pages/ProductPage.js","actions/cartActions.js","pages/CartPage.js","components/FormContainer.js","pages/LoginPage.js","pages/RegisterPage.js","pages/ProfilePage.js","actions/orderActions.js","components/CheckoutSteps.js","pages/ShippingPage.js","pages/PaymentPage.js","pages/PlaceOrderPage.js","pages/OrderPage.js","pages/OrderListPage.js","pages/UserListPage.js","pages/UserEditPage.js","pages/ProductListPage.js","pages/ProductEditPage.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productCreateReview","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","document","location","href","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","message","response","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","listProducts","pageNumber","listProductDetails","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","Meta","description","keywords","Helmet","content","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomePage","match","params","sm","md","lg","xl","ProductPage","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartPage","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginPage","email","setEmail","password","setPassword","redirect","login","RegisterPage","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfilePage","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingPage","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentPage","setPaymentMethod","Check","label","checked","PlaceOrderPage","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderPage","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","OrderListPage","UserListPage","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditPage","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListPage","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditPage","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fabcd5f6.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productCreateReviewReducer, productTopRatedReducer } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers.js'\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers.js'\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productCreateReview: productCreateReviewReducer,\n    productTopRated: productTopRatedReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderDeliver: orderDeliverReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst initialState = {\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage },\n    userLogin: { userInfo: userInfoFromStorage }\n};\n\nconst middleware = [thunk];\nconst store = createStore(\n    reducer, \n    initialState, \n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store","import { \n    PRODUCT_LIST_REQUEST, \n    PRODUCT_LIST_SUCCESS, \n    PRODUCT_LIST_FAIL, \n    PRODUCT_DETAILS_SUCCESS, \n    PRODUCT_DETAILS_REQUEST, \n    PRODUCT_DETAILS_FAIL, \n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_RESET,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET,\n    PRODUCT_TOP_FAIL,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_REQUEST\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch(action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] }\n        case PRODUCT_LIST_SUCCESS:\n            return { loading: false, products: action.payload.products, pages: action.payload.pages, page: action.payload.page }\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\n    switch(action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state }\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload }\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const productDeleteReducer = (state = { }, action) => {\n    switch(action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return { loading: true }\n        case PRODUCT_DELETE_SUCCESS:\n            return { loading: false, success: true }\n        case PRODUCT_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const productCreateReducer = (state = { }, action) => {\n    switch(action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return { loading: true }\n        case PRODUCT_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n        case PRODUCT_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n        case PRODUCT_CREATE_RESET:\n            return { }\n        default:\n            return state\n    }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n    switch(action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return { loading: true }\n        case PRODUCT_UPDATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n        case PRODUCT_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n        case PRODUCT_UPDATE_RESET:\n            return { product: {} }\n        default:\n            return state\n    }\n}\n\nexport const productCreateReviewReducer = (state = { }, action) => {\n    switch(action.type) {\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return { loading: true }\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return { loading: false, success: true }\n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return { loading: false, error: action.payload }\n        case PRODUCT_CREATE_REVIEW_RESET:\n            return { }\n        default:\n            return state\n    }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n    switch(action.type) {\n        case PRODUCT_TOP_REQUEST:\n            return { loading: true, products: [] }\n        case PRODUCT_TOP_SUCCESS:\n            return { loading: false, products: action.payload }\n        case PRODUCT_TOP_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_FAIL';\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\n\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\n    switch(action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n\n            const existItem = state.cartItems.find(x => x.product === item.product)\n\n            if(existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n                }\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\n            }\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload\n            }\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload\n            }\n        default:\n            return state\n    }\n}","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","import {\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_RESET,\n    USER_DETAILS_SUCCESS,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_UPDATE_RESET,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n  } from '../constants/userConstants'\n  \n  export const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n      case USER_LOGIN_REQUEST:\n        return { loading: true }\n      case USER_LOGIN_SUCCESS:\n        return { loading: false, userInfo: action.payload }\n      case USER_LOGIN_FAIL:\n        return { loading: false, error: action.payload }\n      case USER_LOGOUT:\n        return {}\n      default:\n        return state\n    }\n  }\n  \n  export const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n      case USER_REGISTER_REQUEST:\n        return { loading: true }\n      case USER_REGISTER_SUCCESS:\n        return { loading: false, userInfo: action.payload }\n      case USER_REGISTER_FAIL:\n        return { loading: false, error: action.payload }\n      case USER_LOGOUT:\n        return {}\n      default:\n        return state\n    }\n  }\n  \n  export const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n      case USER_DETAILS_REQUEST:\n        return { ...state, loading: true }\n      case USER_DETAILS_SUCCESS:\n        return { loading: false, user: action.payload }\n      case USER_DETAILS_FAIL:\n        return { loading: false, error: action.payload }\n      case USER_DETAILS_RESET:\n        return { user: {} }\n      default:\n        return state\n    }\n  }\n  \n  export const userUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n      case USER_UPDATE_PROFILE_REQUEST:\n        return { loading: true }\n      case USER_UPDATE_PROFILE_SUCCESS:\n        return { loading: false, success: true, userInfo: action.payload }\n      case USER_UPDATE_PROFILE_FAIL:\n        return { loading: false, error: action.payload }\n      case USER_UPDATE_PROFILE_RESET:\n        return {}\n      default:\n        return state\n    }\n  }\n  \n  export const userListReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n      case USER_LIST_REQUEST:\n        return { loading: true }\n      case USER_LIST_SUCCESS:\n        return { loading: false, users: action.payload }\n      case USER_LIST_FAIL:\n        return { loading: false, error: action.payload }\n      case USER_LIST_RESET:\n        return { users: [] }\n      default:\n        return state\n    }\n  }\n  \n  export const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n      case USER_DELETE_REQUEST:\n        return { loading: true }\n      case USER_DELETE_SUCCESS:\n        return { loading: false, success: true }\n      case USER_DELETE_FAIL:\n        return { loading: false, error: action.payload }\n      default:\n        return state\n    }\n  }\n  \n  export const userUpdateReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n      case USER_UPDATE_REQUEST:\n        return { loading: true }\n      case USER_UPDATE_SUCCESS:\n        return { loading: false, success: true }\n      case USER_UPDATE_FAIL:\n        return { loading: false, error: action.payload }\n      case USER_UPDATE_RESET:\n        return {\n          user: {},\n        }\n      default:\n        return state\n    }\n  }","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","import {\n    ORDER_CREATE_REQUEST, \n    ORDER_CREATE_SUCCESS, \n    ORDER_CREATE_FAIL, \n    ORDER_DETAILS_REQUEST, \n    ORDER_DETAILS_SUCCESS, \n    ORDER_DETAILS_FAIL, \n    ORDER_PAY_SUCCESS, \n    ORDER_PAY_FAIL, \n    ORDER_PAY_REQUEST, \n    ORDER_PAY_RESET, \n    ORDER_LIST_MY_REQUEST, \n    ORDER_LIST_MY_FAIL, \n    ORDER_LIST_MY_SUCCESS, \n    ORDER_LIST_MY_RESET, \n    ORDER_LIST_FAIL, \n    ORDER_LIST_SUCCESS, \n    ORDER_LIST_REQUEST,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET\n} from '../constants/orderConstants'\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch(action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n        case ORDER_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {}}, action) => {\n    switch(action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch(action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true\n            }\n        case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n        case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case ORDER_PAY_RESET:\n            return {\n            }\n        default:\n            return state\n    }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n    switch(action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading: true\n            }\n        case ORDER_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n        case ORDER_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case ORDER_DELIVER_RESET:\n            return {\n            }\n        default:\n            return state\n    }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n    switch(action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true\n            }\n        case ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n        case ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case ORDER_LIST_MY_RESET:\n            return {\n                orders: []\n            }\n        default:\n            return state\n    }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n    switch(action.type) {\n        case ORDER_LIST_REQUEST:\n            return {\n                loading: true\n            }\n        case ORDER_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n        case ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import axios from 'axios'\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n//   localStorage.removeItem('cartItems')\n//   localStorage.removeItem('shippingAddress')\n//   localStorage.removeItem('paymentMethod')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n  document.location.href = '/login'\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n    \n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState('')\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`)\n    } else {\n      history.push('/')\n    }\n  }\n\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        type='text'\n        name='q'\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder='Search Products...'\n        className='mr-sm-2 ml-sm-5'\n      ></Form.Control>\n      <Button type='submit' variant='outline-success' className='p-2'>\n        Search\n      </Button>\n    </Form>\n  )\n}\n\nexport default SearchBox","import React from 'react';\nimport { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\nimport { logout } from '../actions/userActions'\nimport SearchBox from './SearchBox'\n\nconst Header = () => {\n\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const logoutHandler = () => {\n        dispatch(logout());\n    }\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>SVI</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Route render={({ history }) => <SearchBox history={history}/>} />\n                        <Nav className=\"ml-auto\">\n                        <LinkContainer to='/cart'>\n                            <Nav.Link>\n                                <i className='fas fa-shopping-cart'></i>Cart\n                            </Nav.Link>\n                        </LinkContainer>\n                        {userInfo ? (\n                            <NavDropdown title={userInfo.name} id='username'>\n                                <LinkContainer to='/profile'>\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                                </LinkContainer>\n                                <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                            </NavDropdown>\n                        ) : (<LinkContainer to='/login'>\n                        <Nav.Link>\n                            <i className='fas fa-user'></i>Sign In\n                        </Nav.Link>\n                    </LinkContainer>\n                    )}\n                    {userInfo && userInfo.isAdmin && (\n                        <NavDropdown title='Admin' id='adminmenu'>\n                        <LinkContainer to='/admin/userlist'>\n                            <NavDropdown.Item>Users</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to='/admin/productlist'>\n                            <NavDropdown.Item>Products</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to='/admin/orderlist'>\n                            <NavDropdown.Item>Orders</NavDropdown.Item>\n                        </LinkContainer>\n                    </NavDropdown>\n                    )}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\n\nconst Footer = () => {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className='text-center py-3'>\n                        Copyright &copy; S6\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Rating = ({ value, text, color }) => {\n    return (\n        <div className='rating'>\n            <span>\n                <i style={{color}} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{color}} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{color}} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{color}} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{color}} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>{text && text}</span>\n        </div>\n    )\n}\n\nRating.defaultProps = {\n    color: '#F8E825',\n}\n\nRating.propTypes = {\n    value: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string,\n}\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\n\nconst Product = ({ product }) => {\n    return (\n            <Card className='my-3 p-3 rounded'>\n                <Link to={`/product/${product._id}`}>\n                    <Card.Img src={product.image} variant='top' />\n                </Link>\n\n                <Card.Body>\n                <Link to={`/product/${product._id}`}>\n                    <Card.Title as='div'>\n                        <strong>{product.name}</strong>\n                    </Card.Title>\n                </Link>\n\n                <Card.Text as='div'>\n                    <Rating \n                        value={product.rating} \n                        text={`${product.numReviews} reviews`}\n                    />\n                </Card.Text>\n\n                <Card.Text as='h3'>${product.price}</Card.Text>\n                </Card.Body>\n            </Card>\n    )\n}\n\nexport default Product\n","import { \n    PRODUCT_LIST_REQUEST, \n    PRODUCT_LIST_SUCCESS, \n    PRODUCT_LIST_FAIL, \n    PRODUCT_DETAILS_REQUEST, \n    PRODUCT_DETAILS_SUCCESS, \n    PRODUCT_DETAILS_FAIL, \n    PRODUCT_DELETE_SUCCESS, \n    PRODUCT_DELETE_FAIL, \n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n} from '../constants/productConstants';\n\nimport axios from 'axios';\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        await axios.delete(`/api/products/${id}`,config)\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.post(`/api/products/`, {}, config)\n\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.put(`/api/products/${product._id}`, product, config)\n\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children}) => {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nMessage.defaultProps = {\n    variant: 'info',\n}\n\nexport default Message\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = () => {\n    return (\n        <Spinner \n            animation='border' \n            role='status' \n            style={{ \n                width: '100px', \n                height: '100px', \n                margin: 'auto', \n                display: 'block'\n            }}\n        >\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, page, isAdmin=false, keyword='' }) => {\n    return pages > 1 && (\n        <Pagination>\n            {[...Array(pages).keys()].map(x => (\n                <LinkContainer \n                    key={x+1} \n                    to={!isAdmin ? keyword ? `/search/${keyword}/page/${x+1}` : `/page/${x+1}` : `/admin/productlist/${x+1}`} >\n                    <Pagination.Item active={x+1 === page}>{x+1}</Pagination.Item>\n                </LinkContainer>\n            ))}\n        </Pagination>\n    )\n}\n\nexport default Paginate\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta name='keyword' content={keywords} />\n    </Helmet>\n  )\n}\n\nMeta.defaultProps = {\n  title: 'S6 Online Store',\n  description: 'We sell the best products for cheap',\n  keywords: 'electronics, buy electronics, cheap electroincs',\n}\n\nexport default Meta","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch()\n\n  const productTopRated = useSelector((state) => state.productTopRated)\n  const { loading, error, products } = productTopRated\n\n  useEffect(() => {\n    dispatch(listTopProducts())\n  }, [dispatch])\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <Carousel pause='hover' className='bg-dark'>\n      {products.map((product) => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className='carousel-caption'>\n              <h2>\n                {product.name} (${product.price})\n              </h2>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  )\n}\n\nexport default ProductCarousel","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Product from '../components/Product'\nimport { listProducts } from '../actions/productActions'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport Meta from '../components/Meta'\nimport ProductCarousel from '../components/ProductCarousel'\n\nconst HomePage = ({ match }) => {\n\n    const keyword = match.params.keyword\n    const pageNumber = match.params.pageNumber || 1\n\n    const dispatch = useDispatch();\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, page, pages } = productList;\n\n    useEffect(() => {\n        dispatch(listProducts(keyword, pageNumber))\n    }, [dispatch, keyword, pageNumber])\n\n    return (\n        <>\n            <Meta/>\n            {!keyword ? (\n                <ProductCarousel />\n            ) : (\n                <Link to='/' className='btn btn-light'>\n                Go Back\n                </Link>\n            )}\n            <h1>Latest Products</h1>\n            {loading ? (\n                <Loader/>\n            ) : error ? ( \n                <Message variant='danger'></Message>\n            ) : (\n                <>\n                <Row>\n                    {products.map((product) => (\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                            <Product product={product} />\n                        </Col>\n                    ))}\n                </Row>\n                <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\n                </>\n            )}\n            \n        </>\n    )\n}\n\nexport default HomePage\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductPage = ({ history, match }) => {\nconst [qty, setQty] = useState(1)\nconst [rating, setRating] = useState(0)\nconst [comment, setComment] = useState('')\n\n    const dispatch = useDispatch();\n\n    const productDetails = useSelector((state) => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const productCreateReview = useSelector(state => state.productCreateReview)\n    const {\n        success: successProductReview,\n        loading: loadingProductReview,\n        error: errorProductReview,\n      } = productCreateReview\n    \n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if(successProductReview) {\n            alert('Review Submitted!')\n            setRating(0);\n            setComment('');\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n        }\n        dispatch(listProductDetails(match.params.id))\n    }, [dispatch, match, successProductReview])\n    \n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(match.params.id, {\n            rating, \n            comment\n        }))\n    }\n\n    return (\n        <>\n            <Link className='btn btn-light my-3' to='/'>Go Back</Link>\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\n            <>\n            <Meta title={product.name}/>\n            <Row>\n                <Col md={6}>\n                    <Image src={product.image} alt={product.name} fluid />\n                </Col>\n                <Col md={3}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>{product.name}</h2>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Rating value={product.rating} text={`${product.numReviews} reviews`}/>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            Price: ${product.price}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            Description: {product.description}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={3}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Price:\n                                    </Col>\n                                    <Col>\n                                        <strong>{product.price}</strong>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Status:\n                                    </Col>\n                                    <Col>\n                                        <strong>{product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}</strong>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            {product.countInStock > 0 && (\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Qty</Col>\n                                        <Col>\n                                            <Form.Control as='select' value={qty} onChange={(e) => \n                                            setQty(e.target.value)}>\n                                                {\n                                                    [...Array(product.countInStock).keys()].map((x) => (\n                                                        <option key={x + 1} value={x + 1}>{x + 1}</option>\n                                                    ))\n                                                }\n                                            </Form.Control>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            )}\n\n                            <ListGroup.Item>\n                                <Button className='btn-block' type='button' disabled={product.countInStock === 0} onClick={addToCartHandler}>\n                                    Add to Cart\n                                </Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={6}>\n                    <h2>Review</h2>\n                    {product.reviews.length === 0 && <Message>No Reviews</Message>}\n                    <ListGroup variant='flush'>\n                        {product.reviews.map(review => (\n                            <ListGroup.Item key={review._id}>\n                                <strong>{review.name}</strong>\n                                <Rating value={review.rating} />\n                                <p>{review.createdAt.substring(0, 10)}</p>\n                                <p>{review.comment}</p>\n                            </ListGroup.Item>\n                        ))}\n                        <ListGroup.Item>\n                            <h2>Write a Customer Review</h2>\n                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n                            {userInfo ? (\n                                <Form onSubmit={submitHandler}>\n                                    <Form.Group controlId='rating'>\n                                        <Form.Label>Rating</Form.Label>\n                                        <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\n                                            <option value=''>Select...</option>\n                                            <option value='1'>1 - Poor</option>\n                                            <option value='2'>2 - Fair</option>\n                                            <option value='3'>3 - Good</option>\n                                            <option value='4'>4 - Very Good</option>\n                                            <option value='5'>5 - Excellent</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                    <Form.Group controlId='comment'>\n                                        <Form.Label>Comment</Form.Label>\n                                        <Form.Control as='textarea' row='3' value={comment} onChange={(e) => setComment(e.target.value)}></Form.Control>\n                                    </Form.Group>\n                                    <Button type='submit' variant='primary'>Submit</Button>\n                                </Form>\n                            ) : (\n                                <Message>\n                                    Please <Link to='/login'>sign in</Link> to write a review\n                                </Message>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n            </Row>\n            </>\n            )}\n            \n        </>\n    )\n}\n\nexport default ProductPage\n","import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data\n    })\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data\n    })\n\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","import React, { useEffect } from 'react'\nimport {Link} from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nconst CartPage = ({ match, location, history }) => {\n\n    const productId = match.params.id;\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n    const dispatch = useDispatch()\n    const cart = useSelector(state => state.cart)\n    const {cartItems} = cart;\n\n    useEffect(() => {\n        if(productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id));\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? (\n                    <Message>\n                        Your cart is empty <Link to='/'>Go Back</Link>\n                    </Message>\n                ) : (\n                    <ListGroup variant='flush'>\n                        {cartItems.map(item => (\n                            <ListGroup.Item key={item.product}>\n                                <Row>\n                                    <Col md={2}>\n                                        <Image src={item.image} alt={item.name} fluid rounded></Image>\n                                    </Col>\n                                    <Col md={3}>\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                    </Col>\n                                    <Col md={2}>\n                                        ${item.price}\n                                    </Col>\n                                    <Col md={2}>\n                                        <Form.Control \n                                            as='select' \n                                            value={item.qty} \n                                            onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n                                        >\n                                                {\n                                                    [...Array(item.countInStock).keys()].map((x) => (\n                                                        <option key={x + 1} value={x + 1}>{x + 1}</option>\n                                                    ))\n                                                }\n                                        </Form.Control>\n                                    </Col>\n                                    <Col md={2}>\n                                        <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}>\n                                            <i className='fas fa-trash'></i>\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                )}\n            </Col>\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n                            ${cartItems\n                                .reduce((acc, item) => acc +item.qty * item.price, 0)\n                                .toFixed(2)\n                            }\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Button \n                                type='button' \n                                className='btn-block' \n                                disabled={cartItems.length === 0}\n                                onClick={checkoutHandler}\n                            >\n                                Proceed To Checkout\n                            </Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartPage\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nconst LoginPage = ({ location, history }) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { loading, error, userInfo } = userLogin;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n        if(userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control \n                        type='email' \n                        placeholder='Enter email' \n                        value={email} \n                        onChange={(e) => setEmail(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                \n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control \n                        type='password' \n                        placeholder='Enter password' \n                        value={password} \n                        onChange={(e) => setPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default LoginPage\n","import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterPage = ({ location, history }) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { loading, error, userInfo } = userRegister;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n        if(userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign Up</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control \n                        type='name' \n                        placeholder='Enter name' \n                        value={name} \n                        onChange={(e) => setName(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control \n                        type='email' \n                        placeholder='Enter email' \n                        value={email} \n                        onChange={(e) => setEmail(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                \n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control \n                        type='password' \n                        placeholder='Enter password' \n                        value={password} \n                        onChange={(e) => setPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                \n                <Form.Group controlId='confirmPassword'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control \n                        type='password' \n                        placeholder='Confirm password' \n                        value={confirmPassword} \n                        onChange={(e) => setConfirmPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default RegisterPage\n","import React, {useState, useEffect} from 'react'\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\n\nconst ProfilePage = ({ location, history }) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { loading, error, user } = userDetails;\n    \n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin;\n    \n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile;\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading:loadingOrders, error:errorOrders, orders } = orderListMy;\n\n    useEffect(() => {\n        if(!userInfo) {\n            history.push('/login')\n        } else {\n            if(!user.name) {\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\n        }\n    }\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {success && <Message variant='success'>Profile Updated</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control \n                            type='name' \n                            placeholder='Enter name' \n                            value={name} \n                            onChange={(e) => setName(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control \n                            type='email' \n                            placeholder='Enter email' \n                            value={email} \n                            onChange={(e) => setEmail(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n                    \n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control \n                            type='password' \n                            placeholder='Enter password' \n                            value={password} \n                            onChange={(e) => setPassword(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n                    \n                    <Form.Group controlId='confirmPassword'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control \n                            type='password' \n                            placeholder='Confirm password' \n                            value={confirmPassword} \n                            onChange={(e) => setConfirmPassword(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                    </Button>\n                </Form>\n            </Col>\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\n                    <Table striped bordered hover responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>DATE</th>\n                                <th>TOTAL</th>\n                                <th>PAID</th>\n                                <th>DELIVERED</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {orders.map(order => (\n                                <tr key={order._id}>\n                                    <td>{order._id}</td>\n                                    <td>{order.createdAt.substring(0, 10)}</td>\n                                    <td>{order.totalPrice}</td>\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\n                                    )}</td>\n                                    <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\n                                    )}</td>\n                                    <td>\n                                        <LinkContainer to={`/order/${order._id}`}>\n                                            <Button variant='light' className='btn-sm'>Details</Button>\n                                        </LinkContainer>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfilePage\n","import axios from 'axios'\nimport { \n    ORDER_CREATE_REQUEST, \n    ORDER_CREATE_SUCCESS, \n    ORDER_CREATE_FAIL, \n    ORDER_DETAILS_FAIL, \n    ORDER_DETAILS_SUCCESS, \n    ORDER_DETAILS_REQUEST, \n    ORDER_PAY_REQUEST, \n    ORDER_LIST_MY_REQUEST, \n    ORDER_LIST_MY_SUCCESS, \n    ORDER_LIST_MY_FAIL, \n    ORDER_LIST_REQUEST, \n    ORDER_LIST_SUCCESS, \n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_SUCCESS\n} from '../constants/orderConstants'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders`,\n            order,\n            config\n            )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}`,\n            config\n            )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${orderId}/pay`,\n            paymentResult,\n            config\n            )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver`,\n            {},\n            config\n            )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({step1, step2, step3, step4}) => {\n    return (\n        <Nav className='justify-content-center mb-4'>\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to='/login'>\n                        <Nav.Link>Sign In</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Sign In</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Shipping</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Payment</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>Place Order</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Place Order</Nav.Link>\n                )}\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, {useState} from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingPage = ({ history }) => {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n    \n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(saveShippingAddress({ address, city, postalCode, country}))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control \n                        type='text' \n                        placeholder='Enter Address' \n                        value={address} \n                        required\n                        onChange={(e) => setAddress(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control \n                        type='text' \n                        placeholder='Enter City' \n                        value={city} \n                        required\n                        onChange={(e) => setCity(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control \n                        type='text' \n                        placeholder='Postal Code' \n                        value={postalCode} \n                        required\n                        onChange={(e) => setPostalCode(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId='Country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control \n                        type='text' \n                        placeholder='Enter Country' \n                        value={country} \n                        required\n                        onChange={(e) => setCountry(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingPage\n","import React, {useState} from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentPage = ({ history }) => {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    if(!shippingAddress) {\n        history.push('/shipping')\n    }\n    \n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n            <h1>Payment Method</h1>\n            <Form onSubmit={submitHandler}>\n                \n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check \n                            type='radio' \n                            label='PayPal or Credit Card' \n                            id='PayPal' \n                            name='paymentMethod' \n                            value='PayPal' \n                            checked \n                            onChange={(e) => setPaymentMethod(e.target.value)}>\n                        </Form.Check>\n                        <Form.Check \n                            type='radio' \n                            label='Stripe' \n                            id='Stripe' \n                            name='paymentMethod' \n                            value='Stripe' \n                            onChange={(e) => setPaymentMethod(e.target.value)}>\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentPage\n","import React, {useEffect} from 'react'\n// import axios from 'axios'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\n\nconst PlaceOrderPage = ({ history }) => {\n    const dispatch = useDispatch()\n    const cart = useSelector(state => state.cart)\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, success, error } = orderCreate\n\n    useEffect(() => {\n        if(success) {\n            history.push(`/order/${order._id}`)\n        }\n        // eslint-disable-next-line\n    }, [history, success])\n\n    const placeOrderHandler = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    const addDecimals = (num) => {\n        return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    // Calculate prices\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n    return (\n        <>\n            <CheckoutSteps step1 step2 step3 step4/>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong>Address: </strong>\n                                {cart.shippingAddress.address}, {' '}\n                                {cart.shippingAddress.city}, {' '}\n                                {cart.shippingAddress.postalCode}, {' '}\n                                {cart.shippingAddress.country} \n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <strong>Method: </strong>\n                            {cart.paymentMethod}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\n                                <ListGroup.Item variant='flush'>\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup.Item>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Button type='button' className='btn-block' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>Place Order</Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default PlaceOrderPage\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nconst OrderPage = ({ match, history }) => {\n    const orderId = match.params.id\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n    \n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, loading, error } = orderDetails\n    \n    const orderPay = useSelector(state => state.orderPay)\n    const { loading:loadingPay, success:successPay } = orderPay\n    \n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading:loadingDeliver, success:successDeliver } = orderDeliver\n\n    if(!loading) {\n        // Calculate Prices\n        const addDecimals = (num) => {\n            return (Math.round(num * 100) / 100).toFixed(2)\n        }\n        order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0))\n    }\n    \n    useEffect(() => {\n\n        if(!userInfo) {\n            history.push('/login')\n        }\n\n        const addPayPalScript = async () => {\n                const { data: clientId } = await axios.get('/api/config/paypal')\n                const script = document.createElement('script')\n                script.type = \"text/javascript\"\n                script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n                script.async = true\n                script.onload = () => {\n                    setSdkReady(true)\n                }\n                document.body.appendChild(script)\n        }\n\n        if(!order || successPay || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if(!window.paypal) {\n                addPayPalScript()                \n            } else {\n                setSdkReady(true)\n            }\n        }\n    },[dispatch, orderId, successPay, successDeliver, order])\n\n    const successPaymentHandler = (paymentResult) => {\n        console.log(paymentResult)\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : \n    <>\n        <h1>Order {order._id}</h1>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p><strong>Name: </strong> {order.user.name}</p>\n                            <p>Email: <a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                            <p>\n                                <strong>Address: </strong>\n                                {order.shippingAddress.address}, {' '}\n                                {order.shippingAddress.city}, {' '}\n                                {order.shippingAddress.postalCode}, {' '}\n                                {order.shippingAddress.country} \n                            </p>\n                            {order.isDelivered ? <Message variant='success'>Delivered on {order.deliveredAt}</Message> :\n                            <Message variant='danger'>Not Delivered</Message>}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                            <strong>Method: </strong>\n                            {order.paymentMethod}\n                            </p>\n                            {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message> :\n                            <Message variant='danger'>Not Paid</Message>}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {order.orderItems.length === 0 ? <Message>Order is empty</Message> : (\n                                <ListGroup.Item variant='flush'>\n                                    {order.orderItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup.Item>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>${order.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>${order.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>${order.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${order.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            {!order.isPaid && (\n                                <ListGroup.Item>\n                                    {loadingPay && <Loader />}\n                                    {!sdkReady ? <Loader /> : (\n                                        <PayPalButton \n                                            amount={order.totalPrice} \n                                            onSuccess={successPaymentHandler} \n                                        />\n                                    )}\n                                </ListGroup.Item>\n                            )}\n                            {loadingDeliver && <Loader/>}\n                            { userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered  && (\n                                <ListGroup.Item>\n                                    <Button type='button' className='btn btn-block' onClick={deliverHandler}>\n                                        Mark As Delivered\n                                    </Button>\n                                </ListGroup.Item>\n                            )}\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n    </>\n}\n\nexport default OrderPage\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderActions'\n\nconst OrderListPage = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const orderList = useSelector((state) => state.orderList)\n  const { loading, error, orders } = orderList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>\n                  {order.createdAt.substring(0, 10)}\n                </td>\n                <td>\n                  ${order.totalPrice}\n                </td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default OrderListPage\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListPage = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const userList = useSelector((state) => state.userList)\n  const { loading, error, users } = userList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userDelete = useSelector((state) => state.userDelete)\n  const { success: successDelete } = userDelete\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, successDelete, userInfo])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteUser(id))\n    }\n  }\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default UserListPage\n","import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditPage = ({ match, history }) => {\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { loading, error, user } = userDetails;\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { loading:loadingUpdate, error:errorUpdate, success:successUpdate } = userUpdate;\n\n    useEffect(() => {\n        if(successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n            if(!user.name || user._id !== userId) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n    }, [dispatch, history, userId, user, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n    }\n\n    return (\n        <>\n            <Link to='/admin/userlist' className='btn-light my-3'>\n                Go Back\n            </Link>\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader/>}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> :\n                (\n                    <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control \n                            type='name' \n                            placeholder='Enter name' \n                            value={name} \n                            onChange={(e) => setName(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control \n                            type='email' \n                            placeholder='Enter email' \n                            value={email} \n                            onChange={(e) => setEmail(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n                    \n                    <Form.Group controlId='isadmin'>\n                        <Form.Check \n                            type='checkbox' \n                            label='Is Admin'\n                            checked={isAdmin}\n                            onChange={(e) => setIsAdmin(e.target.checked)}>\n                        </Form.Check>\n                    </Form.Group>\n                    \n\n                    <Button type='submit' variant='primary'>\n                        Update\n                    </Button>\n                </Form>\n                )}\n\n            </FormContainer>\n        </>\n    )\n}\n\nexport default UserEditPage\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nconst ProductListPage = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, pages, page } = productList\n  \n  const productDelete = useSelector((state) => state.productDelete)\n  const { loading:loadingDelete, error:errorDelete, success:successDelete } = productDelete\n  \n  const productCreate = useSelector((state) => state.productCreate)\n  const { loading:loadingCreate, error:errorCreate, success:successCreate, product:createdProduct } = productCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })\n\n    if (!userInfo.isAdmin) {\n      history.push('/login')\n    } \n\n    if(successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts('', pageNumber))\n    }\n\n  }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n        dispatch(deleteProduct(id))\n    }\n  }\n\n  const createProductHandler = () => {\n    dispatch(createProduct())\n  }\n\n  return (\n    <>\n        <Row className='align-items-center'>\n            <Col>\n                <h1>Products</h1>\n            </Col>\n            <Col className='text-right'>\n                <Button className='my-3' onClick={createProductHandler}>\n                    <i className='fas fa-plus'></i> Create Product\n                </Button>\n            </Col>\n        </Row>\n        {loadingDelete && <Loader/>}\n        {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n        {loadingCreate && <Loader/>}\n        {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>PRICE</th>\n              <th>CATEGORY</th>\n              <th>BRAND</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((product) => (\n              <tr key={product._id}>\n                <td>{product._id}</td>\n                <td>{product.name}</td>\n                <td>\n                  ${product.price}\n                </td>\n                <td>\n                  {product.category}\n                </td>\n                <td>\n                  {product.brand}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(product._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n        <Paginate pages={pages} page={page} isAdmin={true}/>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductListPage\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\nconst ProductEditPage = ({ match, history }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate])\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image', file)\n    setUploading(true)\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n\n      const { data } = await axios.post('/api/upload', formData, config)\n\n      setImage(data)\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter image url'\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id='image-file'\n                label='Choose File'\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId='brand'>\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter brand'\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter countInStock'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter category'\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditPage","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomePage from './pages/HomePage';\nimport ProductPage from './pages/ProductPage';\nimport CartPage from './pages/CartPage'\nimport LoginPage from './pages/LoginPage'\nimport RegisterPage from './pages/RegisterPage'\nimport ProfilePage from './pages/ProfilePage'\nimport ShippingPage from './pages/ShippingPage'\nimport PaymentPage from './pages/PaymentPage'\nimport PlaceOrderPage from './pages/PlaceOrderPage'\nimport OrderPage from './pages/OrderPage'\nimport OrderListPage from './pages/OrderListPage'\nimport UserListPage from './pages/UserListPage'\nimport UserEditPage from './pages/UserEditPage'\nimport ProductListPage from './pages/ProductListPage'\nimport ProductEditPage from './pages/ProductEditPage'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header/>\n      <main className='py-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderPage} />\n          <Route path='/shipping' component={ShippingPage} />\n          <Route path='/payment' component={PaymentPage} />\n          <Route path='/placeorder' component={PlaceOrderPage} />\n          <Route path='/login' component={LoginPage} />\n          <Route path='/register' component={RegisterPage} />\n          <Route path='/profile' component={ProfilePage} />\n          <Route path='/product/:id' component={ProductPage} />\n          <Route path='/cart/:id?' component={CartPage} />\n          <Route path='/admin/userlist' component={UserListPage} />\n          <Route path='/admin/user/:id/edit' component={UserEditPage} />\n          <Route path='/admin/productlist' component={ProductListPage} exact />\n          <Route path='/admin/productlist/:pageNumber' component={ProductListPage}  exact/>\n          <Route path='/admin/product/:id/edit' component={ProductEditPage} />\n          <Route path='/admin/orderlist' component={OrderListPage} />\n          <Route path='/search/:keyword' component={HomePage} exact/>\n          <Route path='/page/:pageNumber' component={HomePage} />\n          <Route path='/search/:keyword/page/:pageNumber' component={HomePage} />\n          <Route path='/' component={HomePage} exact />\n        </Container>\n      </main>\n      <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}